{
  "version": 3,
  "sources": [
    "C:/Users/HP/Ridhima/projects/Ridhima/smart_contracts/hello_world/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAKoC;AAAsB;AAAxD;AAHF;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;AAAA;;AAiBE;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AANF;;;AAAA;;;AAAA;;;AAAA;;;AAME;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AANF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAME;;;AAHkC;AAAA;AAAA;AAAA;AAII;;;;;AAAlB;AAAA;;AAAA;AAAiC;;;;AAAjC;AAAA;;AAAA;AAJc;AAIhC;AAAA;AACA;;AAAA;AALgC;AAAA;AAAA;AAAA;AAUhC;AAVgC;AAed;AAAlB;AACO;;;;;;;;;;;;;;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "bytecblock \"cart\" 0x151f7c75 \"\""
    },
    "18": {
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "20": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "23": {
      "op": "bytec_0 // \"cart\"",
      "defined_out": [
        "\"cart\""
      ],
      "stack_out": [
        "\"cart\""
      ]
    },
    "24": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "\"cart\""
      ],
      "stack_out": [
        "\"cart\"",
        "\"\""
      ]
    },
    "25": {
      "op": "app_global_put",
      "stack_out": []
    },
    "26": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "28": {
      "op": "bz main_bare_routing@10",
      "stack_out": []
    },
    "31": {
      "op": "pushbytess 0x62e55ff0 0x67846dcc 0x64344e8d // method \"addItem(string,string)string\", method \"getCart()string\", method \"clearCart()string\"",
      "defined_out": [
        "Method(addItem(string,string)string)",
        "Method(clearCart()string)",
        "Method(getCart()string)"
      ],
      "stack_out": [
        "Method(addItem(string,string)string)",
        "Method(getCart()string)",
        "Method(clearCart()string)"
      ]
    },
    "48": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(addItem(string,string)string)",
        "Method(clearCart()string)",
        "Method(getCart()string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(addItem(string,string)string)",
        "Method(getCart()string)",
        "Method(clearCart()string)",
        "tmp%2#0"
      ]
    },
    "51": {
      "op": "match main_addItem_route@5 main_getCart_route@6 main_clearCart_route@7",
      "stack_out": []
    },
    "59": {
      "block": "main_after_if_else@14",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "60": {
      "op": "return",
      "stack_out": []
    },
    "61": {
      "block": "main_clearCart_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "63": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "64": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "65": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "67": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "68": {
      "callsub": "smart_contracts/hello_world/contract.algo.ts::ShoppingCart.clearCart",
      "op": "callsub clearCart",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "71": {
      "op": "dup",
      "defined_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "72": {
      "op": "len",
      "defined_out": [
        "length%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length%2#0"
      ]
    },
    "73": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "as_bytes%2#0"
      ]
    },
    "74": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length_uint16%2#0"
      ]
    },
    "77": {
      "op": "swap",
      "stack_out": [
        "length_uint16%2#0",
        "to_encode%2#0"
      ]
    },
    "78": {
      "op": "concat",
      "defined_out": [
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0"
      ]
    },
    "79": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "0x151f7c75"
      ]
    },
    "80": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ]
    },
    "81": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "82": {
      "op": "log",
      "stack_out": []
    },
    "83": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "84": {
      "op": "return",
      "stack_out": []
    },
    "85": {
      "block": "main_getCart_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "87": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "88": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "89": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "91": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "92": {
      "callsub": "smart_contracts/hello_world/contract.algo.ts::ShoppingCart.getCart",
      "op": "callsub getCart",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "95": {
      "op": "dup",
      "defined_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "96": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length%1#0"
      ]
    },
    "97": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "as_bytes%1#0"
      ]
    },
    "98": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length_uint16%1#0"
      ]
    },
    "101": {
      "op": "swap",
      "stack_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ]
    },
    "102": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "103": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "104": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ]
    },
    "105": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "106": {
      "op": "log",
      "stack_out": []
    },
    "107": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "108": {
      "op": "return",
      "stack_out": []
    },
    "109": {
      "block": "main_addItem_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "111": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "112": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "113": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "115": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "116": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "119": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "122": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "125": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "128": {
      "callsub": "smart_contracts/hello_world/contract.algo.ts::ShoppingCart.addItem",
      "op": "callsub addItem",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "131": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "132": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "133": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "134": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "137": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "138": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "139": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "140": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "141": {
      "op": "concat",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "142": {
      "op": "log",
      "stack_out": []
    },
    "143": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "144": {
      "op": "return",
      "stack_out": []
    },
    "145": {
      "block": "main_bare_routing@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "147": {
      "op": "bnz main_after_if_else@14",
      "stack_out": []
    },
    "150": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "152": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "153": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "154": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "155": {
      "op": "return",
      "stack_out": []
    },
    "156": {
      "subroutine": "smart_contracts/hello_world/contract.algo.ts::ShoppingCart.addItem",
      "params": {
        "name#0": "bytes",
        "quantity#0": "bytes"
      },
      "block": "addItem",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "159": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "160": {
      "op": "bytec_0 // \"cart\"",
      "defined_out": [
        "\"cart\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"cart\""
      ]
    },
    "161": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "162": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "163": {
      "op": "pushbytes \" | \"",
      "defined_out": [
        "\" | \"",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "\" | \""
      ]
    },
    "168": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "169": {
      "op": "frame_dig -2",
      "defined_out": [
        "name#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "name#0 (copy)"
      ]
    },
    "171": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "172": {
      "op": "pushbytes \" x\"",
      "defined_out": [
        "\" x\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\" x\""
      ]
    },
    "176": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "177": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "quantity#0 (copy)"
      ]
    },
    "179": {
      "op": "concat",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "180": {
      "op": "bytec_0 // \"cart\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"cart\""
      ]
    },
    "181": {
      "op": "swap",
      "stack_out": [
        "\"cart\"",
        "new_state_value%0#0"
      ]
    },
    "182": {
      "op": "app_global_put",
      "stack_out": []
    },
    "183": {
      "op": "frame_dig -2",
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "185": {
      "retsub": true,
      "op": "retsub"
    },
    "186": {
      "subroutine": "smart_contracts/hello_world/contract.algo.ts::ShoppingCart.getCart",
      "params": {},
      "block": "getCart",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "187": {
      "op": "bytec_0 // \"cart\"",
      "defined_out": [
        "\"cart\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"cart\""
      ]
    },
    "188": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "189": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "190": {
      "retsub": true,
      "op": "retsub"
    },
    "191": {
      "subroutine": "smart_contracts/hello_world/contract.algo.ts::ShoppingCart.clearCart",
      "params": {},
      "block": "clearCart",
      "stack_in": [],
      "op": "bytec_0 // \"cart\"",
      "defined_out": [
        "\"cart\""
      ],
      "stack_out": [
        "\"cart\""
      ]
    },
    "192": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "\"cart\""
      ],
      "stack_out": [
        "\"cart\"",
        "\"\""
      ]
    },
    "193": {
      "op": "app_global_put",
      "stack_out": []
    },
    "194": {
      "op": "pushbytes \"Cart cleared!\"",
      "defined_out": [
        "\"Cart cleared!\""
      ],
      "stack_out": [
        "\"Cart cleared!\""
      ]
    },
    "209": {
      "retsub": true,
      "op": "retsub"
    }
  }
}